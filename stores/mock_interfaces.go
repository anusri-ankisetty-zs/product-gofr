// Code generated by MockGen. DO NOT EDIT.
// Source: productGofr/stores (interfaces: Istore)

// Package stores is a generated GoMock package.
package stores

import (
	models "productGofr/models"
	reflect "reflect"

	gofr "developer.zopsmart.com/go/gofr/pkg/gofr"
	gomock "github.com/golang/mock/gomock"
)

// MockIstore is a mock of Istore interface.
type MockIstore struct {
	ctrl     *gomock.Controller
	recorder *MockIstoreMockRecorder
}

// MockIstoreMockRecorder is the mock recorder for MockIstore.
type MockIstoreMockRecorder struct {
	mock *MockIstore
}

// NewMockIstore creates a new mock instance.
func NewMockIstore(ctrl *gomock.Controller) *MockIstore {
	mock := &MockIstore{ctrl: ctrl}
	mock.recorder = &MockIstoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIstore) EXPECT() *MockIstoreMockRecorder {
	return m.recorder
}

// UserById mocks base method.
func (m *MockIstore) UserById(arg0 *gofr.Context, arg1 int) (*models.Product, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UserById", arg0, arg1)
	ret0, _ := ret[0].(*models.Product)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UserById indicates an expected call of UserById.
func (mr *MockIstoreMockRecorder) UserById(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UserById", reflect.TypeOf((*MockIstore)(nil).UserById), arg0, arg1)
}
